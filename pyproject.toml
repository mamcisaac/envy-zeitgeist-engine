[project]
name = "envy-zeitgeist-engine"
version = "0.1.0"
description = "Agent-based pipeline for pop-culture trend detection and analysis"
requires-python = ">=3.11,<4.0"
dependencies = [
    "aiohttp>=3.9.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "supabase>=2.0.0",
    "pgvector==0.4.1",
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "serpapi>=0.1.5",
    "snscrape @ git+https://github.com/JustAnotherArchivist/snscrape.git@master",
    "feedparser>=6.0.0",
    "beautifulsoup4>=4.12.0",
    "hdbscan>=0.8.33",
    "scikit-learn>=1.3.0",
    "spacy>=3.7.0",
    "tiktoken>=0.5.0",
    "psycopg2-binary>=2.9.0",
    "loguru>=0.7.0",
    "praw>=7.7.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "statsmodels>=0.14.0",
    "croniter>=1.4.0",
    "markdown>=3.5.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.3.0",
    "pytest-timeout>=2.2.0",
    "aioresponses>=0.7.4",
    "responses>=0.24.0",
    "freezegun>=1.2.0",
    "factory-boy>=3.3.0",
    "black>=23.0.0",
    "mypy>=1.7.0",
    "types-requests>=2.31.0",
    "types-beautifulsoup4>=4.12.0",
    "types-python-dateutil>=2.8.0",
    "types-redis>=4.6.0",
    "pandas-stubs>=2.0.0",
    "pre-commit>=3.5.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
]

[build-system]
requires = ["setuptools>=68.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]  # Line too long

[tool.black]
line-length = 88
target-version = ["py311"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=envy_toolkit",
    "--cov=agents",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "-ra",
    "--tb=short",
    "--disable-warnings",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "external: Tests that require external services (should be mocked)",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::FutureWarning",
]

[tool.coverage.run]
source = ["envy_toolkit", "agents"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/migrations/*",
    "setup.py",
]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
exclude = [
    "supabase/migrations/run_migrations.py",
    "dags/",
]

[[tool.mypy.overrides]]
module = [
    "snscrape.*",
    "feedparser.*",
    "serpapi.*",
    "praw.*",
    "hdbscan.*",
    "spacy.*",
    "tiktoken.*",
    "sklearn.*",
    "googleapiclient.*",
    "statsmodels.*",
    "asyncpg.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "htmlcov", ".venv", "venv"]
skips = ["B101", "B601"]  # Skip assert_used and shell=True warnings for tests

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]